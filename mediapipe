import cv2
import mediapipe as mp
import time

mp_drawing = mp.solutions.drawing_utils
mp_hands = mp.solutions.hands
mp_drawing_styles = mp.solutions.drawing_styles

cap = cv2.VideoCapture(0)

# 초기 변수 설정
distance_threshold = 2
check_duration = 3  # 체크 시간 (초)
start_time = None

with mp_hands.Hands(
    max_num_hands=2,
    min_detection_confidence=0.7,
    min_tracking_confidence=0.5) as hands:

    while cap.isOpened():
        success, image = cap.read()
        if not success:
            continue
        image = cv2.cvtColor(cv2.flip(image, 1), cv2.COLOR_BGR2RGB)

        results = hands.process(image)

        image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)

        if results.multi_hand_landmarks:
            for hand_landmarks in results.multi_hand_landmarks:
                finger1 = int(hand_landmarks.landmark[4].x * 100)
                finger2 = int(hand_landmarks.landmark[8].x * 100)
                dist = abs(finger1 - finger2)
                
                
                if dist < distance_threshold:# 거리와 시간 체크 로직
                    if start_time is None:
                        start_time = time.time()
                    elif time.time() - start_time >= check_duration:
                        print("OK")
                        start_time = None  # OK를 출력한 후 타이머 초기화
                else:
                    start_time = None  # 거리가 threshold 이상이면 타이머 초기화

                cv2.putText(
                    image, text=f'f1={finger1} f2={finger2} dist={dist}', org=(10, 30),
                    fontFace=cv2.FONT_HERSHEY_SIMPLEX, fontScale=1,
                    color=255, thickness=3)

                mp_drawing.draw_landmarks(
                    image, hand_landmarks, mp_hands.HAND_CONNECTIONS)

        cv2.imshow('image', image)
        if cv2.waitKey(1) == ord('q'):
            break

cap.release()
cv2.destroyAllWindows()
